{"version":3,"file":"static/js/865.586a501f.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs"],"sourcesContent":["const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n"],"names":["instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","length","x1","y1","x2","y2","undefined","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","mixImmediate","origin","target","getMixer","startsWith","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","key","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","pipe","values","warning","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","state","done","value","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","get","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","MotionGlobalConfig","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","getProps","acceleratedAnimation","when","_delay","delayChildren","staggerChildren","staggerDirection","acos","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","extractEventInfo","event","pointType","point","y","isPrimaryPointer","pointerType","button","isPrimary","clearTime","useManualTiming","performance","queueMicrotask","createLock","name","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","shallowCompare","prev","prevLength","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","visualElement","transitionOverride","transitionEnd","makeTargetAnimatable","willChange","getValue","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","props","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","_a","setAnimateFunction","makeAnimator","AnimationFeature","super","updateAnimationControlsSubscription","unmount","subscribe","mount","prevAnimate","prevProps","id","ExitAnimationFeature","presenceContext","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","axis","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","originPoint","constraints","hasMutatedConstraints","elastic","createBox","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","eachAxis","getAxisMotionValue","percent","layout","measuredAxis","layoutBox","calcLength","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","isRefObject","resolveRefConstraints","_ref2","top","left","bottom","right","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","convertBoundingBoxToBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","source","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","translate","DragGesture","removeGroupControls","dragControls","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","pan","ProjectionNode","HTMLProjectionNode","MeasureLayout","addHoverEvent","callbackName","handleEvent","HoverGesture","FocusGesture","onFocus","isFocusVisible","matches","onBlur","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","scale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","globalProjectionState","hasEverUpdated","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","microtask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useContext","PresenceContext","useId","useEffect","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","transformBoxPoints","topLeft","bottomRight","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treePath","isSharedTransition","treeLength","instance","display","layoutScroll","scroll","transformBox","hasTransform","latestValues","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","isNear","maxDistance","calcAxisDelta","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","createDelta","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","read","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","measureViewportBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","hasScale","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","has2DTranslate","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","isMotionValue","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","getProjectionStyles","styleProp","_b","styles","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","DocumentProjectionNode","ref","documentElement","scrollLeft","body","scrollTop","rootProjectionNode","documentNode","getComputedStyle","position","isIdentityScale","scaleX","scaleY","z","is2DTranslate","getBoundingClientRect","viewportBox","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","trim","isNumericalString","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","filter","positionalValues","width","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","indexOf","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","initialMotionValues","scrapeMotionValuesFromProps","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","isEnabled","FeatureConstructor","MeasureLayoutComponent","updateFeatures","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","resolveVariantFromProps","DOMVisualElement","compareDocumentPosition","vars","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","renderSVG","createDomVisualElement","Component","isSVGComponent","enableHardwareAcceleration","defaultValueType","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","getCurrent","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","item","index","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","replace","functionRegex","functions","join","cssVarTokeniser","regex","cssVariableRegex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer"],"sourceRoot":""}