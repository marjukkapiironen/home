{"version":3,"file":"static/js/759.7f53334f.chunk.js","mappings":"4MASA,MAAMA,EAAoB,IACnBC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,GAQDC,GAAuBC,EAAAA,EAAAA,IAAkB,CAACC,EAAWC,KAAWC,EAAAA,EAAAA,GAAsBF,EAAWC,EAAQR,EAAmBU,EAAAA,K,iCCblI,MAoFE,EApFiCC,IAA6C,IAA5C,cAAEC,GAAeD,EAEjD,MAYQE,EAAO,CACXC,OAAQ,CAAEC,QAAS,EAAGC,EAAG,KACzBC,KAAM,CAAEF,QAAS,EAAGC,EAAG,IAG3B,OACIE,EAAAA,EAAAA,KAAA,OAAKC,GAAG,WAAWC,UAAU,8BAA6BC,UACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACrCH,EAAAA,EAAAA,KAAA,MAAIE,UAAS,mBAAAG,OAAuC,aAAlBX,EAA+B,SAAW,IAAKS,SAAEG,EAAAA,GAAiBC,SAChGH,EAAAA,EAAAA,MAACjB,EAAOqB,IAAG,CACPC,MAAO,CAAEC,WAAY,OACrBC,QAAS,CAAEd,QAAS,EAAGC,EAAG,KAC1Bc,YAAa,CAAEf,QAAS,EAAGC,EAAG,GAC9Be,WAAY,CACIC,KAAM,SACNjB,QAAS,CAAEkB,SAAU,GACrBjB,EAAG,CAAEiB,SAAU,IAE/BC,SAAU,CAAEC,MAAO,GAAOd,SAAA,EAE1BH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,UAASC,SAAEG,EAAAA,GAAiBY,eACzClB,EAAAA,EAAAA,KAACb,EAAOqB,IAAG,CACPN,UAAU,yBACViB,SAnCN,CACdvB,OAAQ,CAAEC,QAAS,GACnBE,KAAM,CACJF,QAAS,EACTgB,WAAY,CACVO,gBAAiB,GACjBC,MAAO,GACPC,KAAM,oBA6BUX,QAAQ,SACRC,YAAY,OACZI,SAAU,CAAEC,MAAM,GAAOd,SAExBG,EAAAA,GAAiBiB,MAAMC,KAAI,CAACC,EAASC,KACtCtB,EAAAA,EAAAA,MAACjB,EAAOqB,IAAG,CAEPN,UAAU,cACViB,SAAUxB,EACVkB,WAAY,CAAEE,SAAU,KAAMZ,SAAA,EAE9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OACIE,UAAU,YAAWC,UACrBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIH,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wBAAwBO,MAAO,CAAEkB,aAAc,OAAOxB,SAAEsB,EAAQG,QAC7E5B,EAAAA,EAAAA,KAAA,KAAAG,SAAIsB,EAAQP,mBAGnBW,QAAQJ,EAAQK,WACb9B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcC,UACzBH,EAAAA,EAAAA,KAAA,OACIE,UAAU,GACV6B,IAAKC,IAAsB,GAAA3B,OAAMoB,EAAQK,SACzCG,IAAI,WAKpBjC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaC,UACxBH,EAAAA,EAAAA,KAAA,KAAGkC,KAAMT,EAAQU,KAAKhC,UAClBC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,qDAAoDC,SAAA,EAClEH,EAAAA,EAAAA,KAACoC,EAAAA,SAAQ,CAACC,KAAM,GAAInC,UAAU,SAC7BuB,EAAQa,mBA3BhBZ,cAoCvB,C","sources":["../node_modules/framer-motion/dist/es/render/dom/motion.mjs","components/Projects.tsx"],"sourcesContent":["import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { motion } from 'framer-motion';\r\nimport { SiGithub } from \"react-icons/si\";\r\nimport { PROJECTS_CONTENT } from '../content';\r\n\r\ninterface Props {\r\n    activeSection : string\r\n}\r\n\r\nconst Projects : React.FC<Props> = ({ activeSection }) : React.ReactElement => {\r\n\r\n    const container = {\r\n        hidden: { opacity: 0 },\r\n        show: {\r\n          opacity: 1,\r\n          transition: {\r\n            staggerChildren: 0.5,\r\n            delay: 0.8,\r\n            when: \"beforeChildren\"\r\n          }\r\n        }\r\n      }\r\n      \r\n      const item = {\r\n        hidden: { opacity: 0, y: 200 },\r\n        show: { opacity: 1, y: 0 },\r\n      }\r\n\r\n    return (\r\n        <div id='projects' className='container-full-width-height'>\r\n            <div className='container-max-1000-width'>\r\n                <h1 className={`section-heading ${activeSection === 'projects' ? 'active' : ''}`}>{PROJECTS_CONTENT.title}</h1>\r\n                    <motion.div\r\n                        style={{ paddingTop: \"2em\"}}\r\n                        initial={{ opacity: 0, y: 150 }}\r\n                        whileInView={{ opacity: 1, y: 0 }}\r\n                        transition={{\r\n                                        ease: 'easeIn',\r\n                                        opacity: { duration: 2 },\r\n                                        y: { duration: 2 },\r\n                                    }}\r\n                        viewport={{ once : true }}\r\n                        >\r\n                        <p className='col-100'>{PROJECTS_CONTENT.description}</p>\r\n                        <motion.div\r\n                            className='col-container projects'\r\n                            variants={container}\r\n                            initial=\"hidden\"\r\n                            whileInView=\"show\"\r\n                            viewport={{ once: true }}\r\n                            >           \r\n                            {PROJECTS_CONTENT.items.map((project, index) =>\r\n                            <motion.div\r\n                                key={index}\r\n                                className='col-50 card'\r\n                                variants={item}\r\n                                transition={{ duration: 1.5 }}\r\n                                >\r\n                                <div className='card-content'>\r\n                                    <div\r\n                                        className='show-text'>\r\n                                        <div>\r\n                                            <p className='uppercase-small white' style={{ marginBottom: \"1em\"}}>{project.name}</p>\r\n                                            <p>{project.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    {Boolean(project.picture) &&\r\n                                        <div className='show-picture'>\r\n                                            <img\r\n                                                className=''\r\n                                                src={process.env.PUBLIC_URL + `${project.picture}`}\r\n                                                alt=\"\"\r\n                                                />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className='github-link'>\r\n                                    <a href={project.link}>\r\n                                        <button className='content-button github-button uppercase-small white'>\r\n                                            <SiGithub size={20} className='icon'/>\r\n                                            {project.link_text}\r\n                                        </button>\r\n                                    </a>\r\n                                </div>\r\n                            </motion.div>\r\n                            )}\r\n                        </motion.div>\r\n                </motion.div>\r\n            </div>\r\n        </div>      \r\n    );\r\n  }\r\n  \r\n  export default Projects;"],"names":["preloadedFeatures","animations","gestureAnimations","drag","layout","motion","createMotionProxy","Component","config","createDomMotionConfig","createDomVisualElement","_ref","activeSection","item","hidden","opacity","y","show","_jsx","id","className","children","_jsxs","concat","PROJECTS_CONTENT","title","div","style","paddingTop","initial","whileInView","transition","ease","duration","viewport","once","description","variants","staggerChildren","delay","when","items","map","project","index","marginBottom","name","Boolean","picture","src","process","alt","href","link","SiGithub","size","link_text"],"sourceRoot":""}